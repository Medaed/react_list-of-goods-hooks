{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","Good","goods","map","good","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","preparedGoods","sort","good1","good2","Name","localeCompare","Length","length","reverse","getGoods","className","type","cn","onClick","None","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,gBAAAA,E,SAAAA,M,KAME,IAAME,EAAsC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjD,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SAgCvB,IAAMC,EAA0B,WACrC,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAMMC,EAjCR,SAAkBT,EAAiBK,EAAmBE,GACpD,IAAMG,EAAa,YAAOV,GAqB1B,OAnBIK,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKR,EAASiB,KACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXV,GACFG,EAAcQ,UAGTR,EAWcS,CAASrB,EAAiBO,EAAWE,GAE1D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAcR,EAASiB,OAErCS,QAAS,WACPjB,EAAaT,EAASiB,MACtBN,GAAc,IAPlB,iCAaA,wBACEa,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAcR,EAASmB,SAErCO,QAAS,WACPjB,EAAaT,EAASmB,QACtBR,GAAc,IAPlB,4BAaA,wBACEa,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAaf,IAEfgB,QAxCc,WACpBf,GAAeD,IAkCX,sBAUEF,IAAcR,EAAS2B,MAAQjB,IAC/B,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAaT,EAAS2B,MACtBhB,GAAc,IALlB,sBAaJ,cAAC,EAAD,CAAMR,MAAOS,QCxHnBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f337d355.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Name = 'name',\n  Length = 'length',\n  None = '',\n}\n\nexport const Good: React.FC<{ goods: string[] }> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nfunction getGoods(goods: string[], sortField: string, isReversed: boolean) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.Name:\n          return good1.localeCompare(good2);\n\n        case SortType.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC<SortType> = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const toggleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const visibleGoods = getGoods(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SortType.Name,\n          })}\n          onClick={() => {\n            setSortField(SortType.Name);\n            setIsReversed(false);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SortType.Length,\n          })}\n          onClick={() => {\n            setSortField(SortType.Length);\n            setIsReversed(false);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={toggleReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== SortType.None || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SortType.None);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <Good goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}